# Callback Constants
import time

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, Bot, CallbackQuery
from telegram.ext import JobQueue

CALLBACK_HELP_HOURS = 'help_hours'
CALLBACK_HELP_CRON = 'help_cron'
CALLBACK_HELP_PUBS = 'help_pubs'
CALLBACK_HELP_VIDEOS = 'help_videos'
CALLBACK_HELP_RETURNS = 'help_returns'
CALLBACK_HELP_STUDIES = 'help_studies'
CALLBACK_HELP_REPORT = 'help_report'

CALLBACK_HELP_INTRO = 'help_intro'
CALLBACK_HELP_HOURS_DEMO = 'help_hours_demo_video'
CALLBACK_HELP_CRON_DEMO = 'help_cron_demo_video'
CALLBACK_HELP_VIDEOS_DEMO = 'help_videos_demo_video'
CALLBACK_HELP_PUBS_DEMO = 'help_pubs_demo_video'
CALLBACK_HELP_RETURNS_DEMO = 'help_returns_demo_video'
CALLBACK_HELP_STUDIES_DEMO = 'help_studies_demo_video'
CALLBACK_HELP_REPORT_DEMO = 'help_report_demo_video'

CALLBACK_HELP_CONTACT = 'help_contact'

# Keyboards Inline
help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u"üïì Horas", callback_data=CALLBACK_HELP_HOURS),
      InlineKeyboardButton(u"‚è± Cron√¥metro", callback_data=CALLBACK_HELP_CRON)],

     [InlineKeyboardButton(u"üéû V√≠deos", callback_data=CALLBACK_HELP_VIDEOS),
      InlineKeyboardButton(u"üìï Publica√ß√µes", callback_data=CALLBACK_HELP_PUBS)],

     [InlineKeyboardButton(u"üè† Revisitas", callback_data=CALLBACK_HELP_RETURNS),
      InlineKeyboardButton(u"üå± Estudos", callback_data=CALLBACK_HELP_STUDIES)],

     [InlineKeyboardButton(u"üìù Relat√≥rio", callback_data=CALLBACK_HELP_REPORT)]]
)

hours_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_HOURS_DEMO)]]
)

cron_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_CRON_DEMO)]]
)

videos_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_VIDEOS_DEMO)]]
)

pubs_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_PUBS_DEMO)]]
)

returns_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_RETURNS_DEMO)]]
)

studies_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_STUDIES_DEMO)]]
)

report_help_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Demonstra√ß√£o', callback_data=CALLBACK_HELP_REPORT_DEMO)]]
)

home_contact_keyboard = InlineKeyboardMarkup(
    [[InlineKeyboardButton(u'In√≠cio', callback_data=CALLBACK_HELP_INTRO),
      InlineKeyboardButton(u'Mais Ajuda', url='t.me/pedrohartmann')]]
)

# GIF Constants
HOUR_GIF = 'CgADAQADkwADDkrpRAOJrNQBQlf3Ag'
CRON_VIDEO = 'BAADAQADRgADGHDpRIPcGIvVGQHDAg'
VIDEO_VIDEO = 'BAADAQADmAADDkrpRHl9CyUfjEBhAg'
PUBS_VIDEO = 'BAADAQADRwADGHDpRNRFjZ7xh4ZjAg'
RETURNS_VIDEO = 'BAADAQADmQADDkrpRIPvjeXYKULnAg'
STUDY_VIDEO = 'BAADAQADRQADGHDpRGWAjXX81OM7Ag'
REPORT_VIDEO = 'CgADAQADXgADLpQRRWmfd_4ozPnwAg'


def help_inline(bot: Bot, update: Update):
    update.message.reply_text(text='‚ùì *Ajuda*\n\n'
                                   "Tem uma d√∫vida? \n"
                                   "Escolha primeiro uma op√ß√£o pra que eu possa te ajudar.",
                              reply_markup=help_keyboard,
                              parse_mode='Markdown')


def help_callback(bot: Bot, update: Update):
    query: CallbackQuery = update.callback_query

    if query.data == CALLBACK_HELP_INTRO:
        bot.edit_message_text(text='‚ùì *Ajuda*\n\n'
                                   "Tem uma d√∫vida? \n"
                                   "Escolha primeiro uma op√ß√£o pra que eu possa te ajudar.",
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_HOURS:
        bot.edit_message_text(text='üïì *Horas*\n\n'
                                   'Esse recurso serve para voc√™ *guardar suas horas* de campo durante o m√™s. \n\n'
                                   'Voc√™ adicionar ou remover suas horas usando os bot√µes que tem o sinal de (+) ou (-). \n\n'
                                   'Suas horas s√£o sempre *salvas automaticamente* ap√≥s pressionar um bot√£o. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=hours_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_CRON:
        bot.edit_message_text(text='‚è± *Cron√¥metro*\n\n'
                                   'Esse recurso serve para voc√™ *cron√¥metrar o seu tempo de campo*. \n\n'
                                   'Voc√™ pode acompanhar o seu tempo clicando no bot√£o Atualizar. \n\n'
                                   'Seu tempo √© *sempre salvo automaticamente ap√≥s* pressionar o bot√£o Salvar. '
                                   'Se voc√™ n√£o iniciou o cronometro na hora certa, voc√™ pode Descartar o tempo e adicionar '
                                   'manualmente depois. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=cron_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_VIDEOS:
        bot.edit_message_text(text='üéû *V√≠deos*\n\n'
                                   'Aqui voc√™ pode salvar os v√≠deos que voc√™ mostrou no servi√ßo de campo durante o m√™s.\n\n'
                                   'Voc√™ pode ver o total do m√™s e adicionar/subtrair os v√≠deos.\n\n'
                                   'Seus v√≠deos sempre s√£o *salvos automaticamente* ap√≥s pressionar um bot√£o. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=videos_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_PUBS:
        bot.edit_message_text(text='üìï *Publica√ß√µes*\n\n'
                                   'Salve o n√∫mero de publica√ß√µes que voc√™ colocou no m√™s \n\n'
                                   'Voc√™ pode acompanhar o total do m√™s ou adicionar/subtrair as publica√ß√µes.\n\n'
                                   'Suas publica√ß√µes sempre *s√£o salvas automaticamente* ap√≥s pressionar um bot√£o. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=pubs_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_RETURNS:
        bot.edit_message_text(text='üè† *Revisitas*\n\n'
                                   'Salve o n√∫mero de revisitas que voc√™ fez durante o m√™s. \n\n'
                                   'Voc√™ pode acompanhar o total do m√™s ou adicionar/subtrair suas revisitas.\n\n'
                                   'Suas revisitas s√£o sempre *salvas automaticamente* ap√≥s pressionar um bot√£o. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=returns_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_STUDIES:
        bot.edit_message_text(text='üå± *Estudos*\n\n'
                                   'Salve o n√∫mero de estudos que voc√™ fez durante o m√™s. \n\n'
                                   'Voc√™ pode acompanhar o total do m√™s ou adicionar/subtrair seus estudos.\n\n'
                                   'Seus estudos s√£o sempre *salvos automaticamente* ap√≥s pressionar um bot√£o. \n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=studies_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_REPORT:
        bot.edit_message_text(text='üìù *Relat√≥rio*\n\n'
                                   'Esse recurso junta tudo o que voc√™ j√° adicionou durante o m√™s em um s√≥ lugar. \n\n'
                                   'Voc√™ pode ver o relat√≥rio do *M√™s Atual* ou do *M√™s passado.* \n\n'
                                   'Pra te ajudar ainda mais, todo ultimo dia do m√™s voc√™ receber√° um lembrete de entraga do relat√≥rio.\n\n'
                                   'Se voc√™ ainda estiver com d√∫vidas, veja um video de demonstra√ß√£o clicando no bot√£o abaixo.',
                              chat_id=query.message.chat_id,
                              message_id=query.message.message_id,
                              reply_markup=report_help_keyboard,
                              parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_HOURS_DEMO:
        bot.send_animation(animation=HOUR_GIF,
                           chat_id=query.message.chat_id)

        bot.send_message(text='üïì *Horas*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_CRON_DEMO:
        bot.send_video(video=CRON_VIDEO,
                       chat_id=query.message.chat_id)

        bot.send_message(text='‚è± *Cron√¥metro*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_VIDEOS_DEMO:
        bot.send_video(video=VIDEO_VIDEO,
                       chat_id=query.message.chat_id)

        bot.send_message(text='üéû *V√≠deos*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_PUBS_DEMO:
        bot.send_video(video=PUBS_VIDEO,
                       chat_id=query.message.chat_id)

        bot.send_message(text='üìï *Publica√ß√µes*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_RETURNS_DEMO:
        bot.send_video(video=RETURNS_VIDEO,
                       chat_id=query.message.chat_id)

        bot.send_message(text='üè† *Revisitas*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_STUDIES_DEMO:
        bot.send_video(video=STUDY_VIDEO,
                       chat_id=query.message.chat_id)

        bot.send_message(text='üå± *Estudos*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    elif query.data == CALLBACK_HELP_REPORT_DEMO:
        bot.send_animation(animation=REPORT_VIDEO,
                           chat_id=query.message.chat_id)

        bot.send_message(text='üìù *Relat√≥rio*\n\n'
                              'Voc√™ ainda tem alguma d√∫vida? \n'
                              'Tudo bem, eu conhe√ßo algu√©m que pode te ajudar. üòÅ',
                         chat_id=query.message.chat_id,
                         reply_markup=home_contact_keyboard,
                         parse_mode='Markdown')

    query.answer()
